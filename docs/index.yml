openapi: 3.0.0

info:
  title: 'Ride API'
  version: 1.1.0

tags:
  - name: 'Rides'

paths:
  /rides:
    post:
      tags:
        - 'Rides'
      summary: 'Create Ride'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_lat:
                  type: number
                  minimum: -90
                  maximum: 90
                  nullable: false
                start_long:
                  type: number
                  minimum: -180
                  maximum: 180
                  nullable: false
                end_lat:
                  type: number
                  minimum: -90
                  maximum: 90
                  nullable: false
                end_long:
                  type: number
                  minimum: -180
                  maximum: 180
                  nullable: false
                rider_name:
                  type: string
                  nullable: false
                driver_name:
                  type: string
                  nullable: false
                driver_vehicle:
                  type: string
                  nullable: false
              required:
                - 'start_lat'
                - 'start_long'
                - 'end_lat'
                - 'end_long'
                - 'rider_name'
                - 'driver_name'
                - 'driver_vehicle'
              example:
                start_lat: 801
                start_long: 10
                end_lat: 10
                end_long: 80
                rider_name: 'Jane Doe'
                driver_name: 'John Doe'
                driver_vehicle: 'BMW M3'
      responses:
        201:
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
              example:
                id: 1
                start_lat: 80
                start_long: 10
                end_lat: 80
                end_long: 10
                rider_name: 'Jane Doe'
                driver_name: 'John Doe'
                driver_vehicle: 'BMW M3'
                created_at: '2022-10-01T15:25:15.295Z'
                updated_at: '2022-10-01T15:25:15.295Z'
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                statusCode: 400
                error: 'Bad Request'
                message: '"start_lat" must be less than 90'
    get:
      tags:
        - 'Rides'
      summary: 'Get All Rides'
      parameters:
        - in: query
          name: 'page'
          schema:
            type: number
            minimum: 1
            nullable: false
          required: false
        - in: query
          name: 'size'
          schema:
            type: number
            minimum: 1
            maximum: 100
            nullable: false
          required: false
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ride'
              example:
                - id: 1
                  start_lat: 80
                  start_long: 10
                  end_lat: 80
                  end_long: 10
                  rider_name: 'Jane Doe'
                  driver_name: 'John Doe'
                  driver_vehicle: 'BMW M3'
                  created_at: '2022-10-01T15:25:15.295Z'
                  updated_at: '2022-10-01T15:25:15.295Z'
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                statusCode: 400
                error: 'Bad Request'
                message: '"page" must be a number'
        404:
          description: 'No Rides Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                statusCode: 404
                error: 'Not Found'
                message: 'Could not find any rides'
  /rides/{id}:
    get:
      tags:
        - 'Rides'
      summary: 'Get Ride by ID'
      parameters:
        - in: path
          name: 'id'
          schema:
            type: number
            minimum: 1
            nullable: false
          required: true
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
              example:
                id: 1
                start_lat: 80
                start_long: 10
                end_lat: 80
                end_long: 10
                rider_name: 'Jane Doe'
                driver_name: 'John Doe'
                driver_vehicle: 'BMW M3'
                created_at: '2022-10-01T15:25:15.295Z'
                updated_at: '2022-10-01T15:25:15.295Z'
        400:
          description: 'Validation Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                statusCode: 400
                error: 'Bad Request'
                message: '"id" must be a number'
        404:
          description: 'Ride Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                statusCode: 404
                error: 'Not Found'
                message: 'Could not find any rides'

components:
  schemas:
    Error:
      type: object
      properties:
        statusCode:
          type: number
        error:
          type: string
        message:
          type: string
    Ride:
      type: object
      properties:
        id:
          type: number
        start_lat:
          type: number
        start_long:
          type: number
        end_lat:
          type: number
        end_long:
          type: number
        rider_name:
          type: string
        driver_name:
          type: string
        driver_vehicle:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
